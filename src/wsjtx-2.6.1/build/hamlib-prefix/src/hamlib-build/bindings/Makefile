# Makefile.in generated by automake 1.16.1 from Makefile.am.
# bindings/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Hamlib bindings using SWIG
# more information on swig at http://www.swig.org
#


VPATH = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/bindings
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hamlib
pkgincludedir = $(includedir)/hamlib
pkglibdir = $(libdir)/hamlib
pkglibexecdir = $(libexecdir)/hamlib
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = aarch64-unknown-linux-gnu
host_triplet = aarch64-unknown-linux-gnu

##########################################
# Perl binding
#am__append_1 = hamlibperl_wrap.c
#am__append_2 = hamlibperl_wrap.c Hamlib.pm Hamlib.bs Hamlib-pl.mk.old
#am__append_3 = perltest.pl
#am__append_4 = hamlibpy_wrap.c Hamlib.py *.pyc
#am__append_5 = hamlibpy_wrap.c Hamlib.py
# PYVER_3
#am__append_6 = $(pytest)

# Python

##########################################
# Tcl binding
#am__append_7 = hamlibtcl_wrap.c
#am__append_8 = hamlibtcl_wrap.c pkgIndex.tcl tcltest.tcl
#am__append_9 = tcltest.tcl
#am__append_10 = hamliblua_wrap.c
#am__append_11 = hamliblua_wrap.c
#am__append_12 = luatest.lua
subdir = bindings
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/ax_append_flag.m4 \
	$(top_srcdir)/macros/ax_cflags_warn_all.m4 \
	$(top_srcdir)/macros/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/macros/ax_lib_indi.m4 \
	$(top_srcdir)/macros/ax_lib_nova.m4 \
	$(top_srcdir)/macros/ax_lib_readline.m4 \
	$(top_srcdir)/macros/ax_lua.m4 \
	$(top_srcdir)/macros/ax_pkg_swig.m4 \
	$(top_srcdir)/macros/ax_pthread.m4 \
	$(top_srcdir)/macros/ax_python_devel.m4 \
	$(top_srcdir)/macros/gr_pwin32.m4 \
	$(top_srcdir)/macros/hl_getaddrinfo.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/perl.m4 $(top_srcdir)/macros/pkg.m4 \
	$(top_srcdir)/macros/tcl.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/hamlib/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(Hamliblua_ladir)" \
	"$(DESTDIR)$(_Hamlib_ladir)" "$(DESTDIR)$(hamlibtcl_ladir)" \
	"$(DESTDIR)$(pyexecdir)" "$(DESTDIR)$(exampledir)" \
	"$(DESTDIR)$(hamlibtcl_ladir)"
LTLIBRARIES = $(Hamliblua_la_LTLIBRARIES) $(_Hamlib_la_LTLIBRARIES) \
	$(hamlibtcl_la_LTLIBRARIES)
#Hamliblua_la_DEPENDENCIES =  \
#	$(top_builddir)/src/libhamlib.la
#nodist_Hamliblua_la_OBJECTS =  \
#	Hamliblua_la-hamliblua_wrap.lo
Hamliblua_la_OBJECTS = $(nodist_Hamliblua_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
Hamliblua_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(Hamliblua_la_LDFLAGS) $(LDFLAGS) -o $@
#am_Hamliblua_la_rpath = -rpath $(Hamliblua_ladir)
am__DEPENDENCIES_1 =
#_Hamlib_la_DEPENDENCIES =  \
#	$(top_builddir)/src/libhamlib.la \
#	$(am__DEPENDENCIES_1)
#nodist__Hamlib_la_OBJECTS = hamlibpy_wrap.lo
_Hamlib_la_OBJECTS = $(nodist__Hamlib_la_OBJECTS)
_Hamlib_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(_Hamlib_la_LDFLAGS) $(LDFLAGS) -o $@
#am__Hamlib_la_rpath = -rpath $(_Hamlib_ladir)
#hamlibtcl_la_DEPENDENCIES =  \
#	$(top_builddir)/src/libhamlib.la \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
#nodist_hamlibtcl_la_OBJECTS =  \
#	hamlibtcl_la-hamlibtcl_wrap.lo
hamlibtcl_la_OBJECTS = $(nodist_hamlibtcl_la_OBJECTS)
hamlibtcl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(hamlibtcl_la_CFLAGS) \
	$(CFLAGS) $(hamlibtcl_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hamlibtcl_la_rpath = -rpath $(hamlibtcl_ladir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/hamlib
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo \
	./$(DEPDIR)/hamlibpy_wrap.Plo \
	./$(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_Hamliblua_la_SOURCES) $(nodist__Hamlib_la_SOURCES) \
	$(nodist_hamlibtcl_la_SOURCES)
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__pep3147_tweak = \
  sed -e 's|\.py$$||' -e 's|[^/]*$$|&.*.pyc\n&.*.pyo|'
py_compile = $(top_srcdir)/build-aux/py-compile
DATA = $(example_DATA) $(hamlibtcl_la_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/py-compile
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABI_AGE = 0
ABI_REVISION = 6
ABI_VERSION = 4
ACLOCAL = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/missing aclocal-1.16
ALLOCA = 
AMP_BACKENDEPS =  $(top_builddir)/amplifiers/elecraft/libhamlib-elecraft.la $(top_builddir)/amplifiers/gemini/libhamlib-gemini.la
AMP_BACKEND_LIST = amplifiers/elecraft amplifiers/gemini
AMTAR = $${TAR-tar}
AM_CFLAGS =  -DIN_HAMLIB -I$(top_srcdir)/include -I$(top_srcdir)/src -I$(top_srcdir)/lib -I$(top_builddir)/include -fno-strict-aliasing
AM_CPPFLAGS =  -DIN_HAMLIB -I$(top_srcdir)/include -I$(top_srcdir)/src -I$(top_srcdir)/lib -I$(top_builddir)/include -I$(top_srcdir)/include -I$(top_srcdir)/bindings  \
	$(TCL_INCLUDE_SPEC) $(PYTHON_CPPFLAGS)

AM_CXXFLAGS = -O2
AM_DEFAULT_VERBOSITY = 0
AM_LDFLAGS = 
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/missing automake-1.16
AWK = mawk
BINDINGS = 
BINDING_ALL = 
BINDING_CHECK = 
BINDING_CLEAN = 
BINDING_DISTCHECK = 
BINDING_DISTCLEAN = 
BINDING_INSTALL_EXEC = 
BINDING_LIB_TARGETS = 
BINDING_LIST = 
BINDING_UNINSTALL = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fPIC -fdata-sections -ffunction-sections 
CPP = gcc -E
CPPFLAGS = 
CXX = g++ -std=c++11
CXXCPP = g++ -E -std=c++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DL_LIBS = -ldl
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_CXX11 = 1
INDI_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = -Wl,--gc-sections
LIBOBJS =  ${LIBOBJDIR}termios$U.o ${LIBOBJDIR}dummy$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUSB = libusb-1.0
LIBUSB_CFLAGS = 
LIBUSB_LIBS = -lusb-1.0
LIBXML2_CFLAGS = 
LIBXML2_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}termios$U.lo ${LIBOBJDIR}dummy$U.lo
LT_SYS_LIBRARY_PATH = 
LUA = 
LUA_EXEC_PREFIX = 
LUA_INCLUDE = 
LUA_LIB = 
LUA_PLATFORM = 
LUA_PREFIX = 
LUA_SHORT_VERSION = 
LUA_VERSION = 
MAKEINFO = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/missing makeinfo
MANIFEST_TOOL = :
MATH_LIBS = -lm
MKDIR_P = /usr/bin/mkdir -p
NET_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
NOVA_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OSXLDFLAGS = 
OTOOL = 
OTOOL64 = 
PACKAGE = hamlib
PACKAGE_BUGREPORT = hamlib-developer@lists.sourceforge.net
PACKAGE_NAME = Hamlib
PACKAGE_STRING = Hamlib 4.5.4
PACKAGE_TARNAME = hamlib
PACKAGE_URL = http://www.hamlib.org
PACKAGE_VERSION = 4.5.4
PATH_SEPARATOR = :
PERL_INC_DIR = 
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LIBS = 
PYTHON_PLATFORM = 
PYTHON_PLATFORM_SITE_PKG = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
READLINE_LIBS = -lreadline
RIG_BACKENDEPS =  $(top_builddir)/rigs/adat/libhamlib-adat.la $(top_builddir)/rigs/alinco/libhamlib-alinco.la $(top_builddir)/rigs/aor/libhamlib-aor.la $(top_builddir)/rigs/barrett/libhamlib-barrett.la $(top_builddir)/rigs/codan/libhamlib-codan.la $(top_builddir)/rigs/dorji/libhamlib-dorji.la $(top_builddir)/rigs/drake/libhamlib-drake.la $(top_builddir)/rigs/dummy/libhamlib-dummy.la $(top_builddir)/rigs/elad/libhamlib-elad.la $(top_builddir)/rigs/flexradio/libhamlib-flexradio.la $(top_builddir)/rigs/icom/libhamlib-icom.la $(top_builddir)/rigs/icmarine/libhamlib-icmarine.la $(top_builddir)/rigs/jrc/libhamlib-jrc.la $(top_builddir)/rigs/kachina/libhamlib-kachina.la $(top_builddir)/rigs/kenwood/libhamlib-kenwood.la $(top_builddir)/rigs/kit/libhamlib-kit.la $(top_builddir)/rigs/lowe/libhamlib-lowe.la $(top_builddir)/rigs/pcr/libhamlib-pcr.la $(top_builddir)/rigs/prm80/libhamlib-prm80.la $(top_builddir)/rigs/racal/libhamlib-racal.la $(top_builddir)/rigs/rft/libhamlib-rft.la $(top_builddir)/rigs/rs/libhamlib-rs.la $(top_builddir)/rigs/skanti/libhamlib-skanti.la $(top_builddir)/rigs/tapr/libhamlib-tapr.la $(top_builddir)/rigs/tentec/libhamlib-tentec.la $(top_builddir)/rigs/tuner/libhamlib-tuner.la $(top_builddir)/rigs/uniden/libhamlib-uniden.la $(top_builddir)/rigs/winradio/libhamlib-winradio.la $(top_builddir)/rigs/wj/libhamlib-wj.la $(top_builddir)/rigs/yaesu/libhamlib-yaesu.la $(top_builddir)/rigs/gomspace/libhamlib-gomspace.la
RIG_BACKEND_LIST = rigs/adat rigs/alinco rigs/aor rigs/barrett rigs/codan rigs/dorji rigs/drake rigs/dummy rigs/elad rigs/flexradio rigs/icom rigs/icmarine rigs/jrc rigs/kachina rigs/kenwood rigs/kit rigs/lowe rigs/pcr rigs/prm80 rigs/racal rigs/rft rigs/rs rigs/skanti rigs/tapr rigs/tentec rigs/tuner rigs/uniden rigs/winradio rigs/wj rigs/yaesu rigs/gomspace
ROT_BACKENDEPS =  $(top_builddir)/rotators/amsat/libhamlib-amsat.la $(top_builddir)/rotators/ars/libhamlib-ars.la $(top_builddir)/rotators/celestron/libhamlib-celestron.la $(top_builddir)/rotators/cnctrk/libhamlib-cnctrk.la $(top_builddir)/rotators/grbltrk/libhamlib-grbltrk.la $(top_builddir)/rotators/easycomm/libhamlib-easycomm.la $(top_builddir)/rotators/ether6/libhamlib-ether6.la $(top_builddir)/rotators/fodtrack/libhamlib-fodtrack.la $(top_builddir)/rotators/gs232a/libhamlib-gs232a.la $(top_builddir)/rotators/heathkit/libhamlib-heathkit.la $(top_builddir)/rotators/m2/libhamlib-m2.la $(top_builddir)/rotators/meade/libhamlib-meade.la $(top_builddir)/rotators/rotorez/libhamlib-rotorez.la $(top_builddir)/rotators/sartek/libhamlib-sartek.la $(top_builddir)/rotators/spid/libhamlib-spid.la $(top_builddir)/rotators/ts7400/libhamlib-ts7400.la $(top_builddir)/rotators/prosistel/libhamlib-prosistel.la $(top_builddir)/rotators/ioptron/libhamlib-ioptron.la $(top_builddir)/rotators/satel/libhamlib-satel.la $(top_builddir)/rotators/radant/libhamlib-radant.la
ROT_BACKEND_LIST = rotators/amsat rotators/ars rotators/celestron rotators/cnctrk rotators/grbltrk rotators/easycomm rotators/ether6 rotators/fodtrack rotators/gs232a rotators/heathkit rotators/m2 rotators/meade rotators/rotorez rotators/sartek rotators/spid rotators/ts7400 rotators/prosistel rotators/ioptron rotators/satel rotators/radant
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
SWIG = 
SWIG_LIB = 
TCL_BIN_DIR = 
TCL_CFLAGS = 
TCL_INCLUDE_SPEC = 
TCL_LIBS = 
TCL_LIB_FILE = 
TCL_LIB_SPEC = 
TCL_SHLIB_SUFFIX = 
TCL_SRC_DIR = 
TCL_VERSION = 
USRP_CFLAGS = 
USRP_LIBS = 
VERSION = 4.5.4
WINEXELDFLAGS = 
WINLDFLAGS = 
abs_builddir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib-build/bindings
abs_srcdir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/bindings
abs_top_builddir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib-build
abs_top_srcdir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = aarch64-unknown-linux-gnu
build_alias = 
build_cpu = aarch64
build_os = linux-gnu
build_vendor = unknown
builddir = .
cf_with_cxx = yes
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = aarch64-unknown-linux-gnu
host_alias = 
host_cpu = aarch64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
luadir = 
luaexecdir = 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgluadir = 
pkgluaexecdir = 
pkgpyexecdir = 
pkgpythondir = 
prefix = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib/bindings
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = /home/pi/github/yasdr/src/wsjtx-2.6.1/build/hamlib-prefix/src/hamlib
SWGFILES = hamlib.swg ignore.swg rig.swg rotator.swg amplifier.swg
SWGDEP = \
	$(top_srcdir)/include/hamlib/rig.h \
	$(top_srcdir)/include/hamlib/riglist.h \
	$(top_srcdir)/include/hamlib/rotator.h \
	$(top_srcdir)/include/hamlib/rotlist.h \
	$(top_srcdir)/include/hamlib/amplifier.h \
	$(top_srcdir)/include/hamlib/amplist.h \
	$(SWGFILES)

EXTRA_DIST = $(SWGFILES) \
	Makefile.PL perltest.pl tcltest.tcl.in pytest.py py3test.py \
	luatest.lua README.python

exampledir = $(docdir)/examples
example_DATA = $(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_12)
BUILT_SOURCES = $(am__append_1) $(am__append_5) $(am__append_7) \
	$(am__append_11)
MOSTLYCLEANFILES = $(am__append_2) $(am__append_4) $(am__append_8) \
	$(am__append_10)

# Perl

##########################################
# Python binding
#pyexec_ltlib = _Hamlib.la
#pytest = pytest.py

# Set by AM_CONDITIONAL in configure.ac
##pytest = py3test.py
#nodist_pyexec_PYTHON = Hamlib.py
#nodist__Hamlib_la_SOURCES = hamlibpy_wrap.c
#_Hamlib_la_LDFLAGS = -no-undefined -module -avoid-version
#_Hamlib_la_LIBADD = $(top_builddir)/src/libhamlib.la $(PYTHON_LIBS)
#_Hamlib_ladir = $(pyexecdir)
#_Hamlib_la_LTLIBRARIES = $(pyexec_ltlib)
#tcl_ltlib = hamlibtcl.la
#tcldir = $(libdir)/tcl$(TCL_VERSION)/Hamlib
#PKG_VER = $(ABI_VERSION).$(ABI_REVISION)
#DLL = hamlibtcl-$(PKG_VER)$(TCL_SHLIB_SUFFIX)
#nodist_hamlibtcl_la_SOURCES = hamlibtcl_wrap.c
#hamlibtcl_la_CFLAGS = $(TCL_CFLAGS)
#hamlibtcl_la_LDFLAGS = -no-undefined -module -release $(PKG_VER) -avoid-version
#hamlibtcl_la_LIBADD = $(top_builddir)/src/libhamlib.la $(TCL_LIB_SPEC) $(TCL_LIBS)
#hamlibtcl_ladir = $(tcldir)
#hamlibtcl_la_DATA = pkgIndex.tcl

# Install hamlibtcl.la into the $(tcldir)/Hamlib directory
# set by $(hamlibtcl_ladir)
#hamlibtcl_la_LTLIBRARIES = $(tcl_ltlib)
#do_subst = sed -e 's,[@]tcldir[@],$(tcldir),g'

# TCL

##########################################
# Lua binding
#luaexec_ltlib = Hamliblua.la
#nodist_luaexec_LUA = Hamlib.lua
#nodist_Hamliblua_la_SOURCES = hamliblua_wrap.c
#Hamliblua_la_CPPFLAGS = $(LUA_INCLUDE) -I$(top_srcdir)/include -I$(top_srcdir)/src
#Hamliblua_la_LDFLAGS = -no-undefined -module -avoid-version
#Hamliblua_la_LIBADD = $(top_builddir)/src/libhamlib.la
#Hamliblua_ladir = $(luaexecdir)
#Hamliblua_la_LTLIBRARIES = $(luaexec_ltlib)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu bindings/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu bindings/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-Hamliblua_laLTLIBRARIES: $(Hamliblua_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(Hamliblua_la_LTLIBRARIES)'; test -n "$(Hamliblua_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(Hamliblua_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(Hamliblua_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(Hamliblua_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(Hamliblua_ladir)"; \
	}

uninstall-Hamliblua_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(Hamliblua_la_LTLIBRARIES)'; test -n "$(Hamliblua_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(Hamliblua_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(Hamliblua_ladir)/$$f"; \
	done

clean-Hamliblua_laLTLIBRARIES:
	-test -z "$(Hamliblua_la_LTLIBRARIES)" || rm -f $(Hamliblua_la_LTLIBRARIES)
	@list='$(Hamliblua_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-_Hamlib_laLTLIBRARIES: $(_Hamlib_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(_Hamlib_la_LTLIBRARIES)'; test -n "$(_Hamlib_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(_Hamlib_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(_Hamlib_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(_Hamlib_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(_Hamlib_ladir)"; \
	}

uninstall-_Hamlib_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(_Hamlib_la_LTLIBRARIES)'; test -n "$(_Hamlib_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(_Hamlib_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(_Hamlib_ladir)/$$f"; \
	done

clean-_Hamlib_laLTLIBRARIES:
	-test -z "$(_Hamlib_la_LTLIBRARIES)" || rm -f $(_Hamlib_la_LTLIBRARIES)
	@list='$(_Hamlib_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-hamlibtcl_laLTLIBRARIES: $(hamlibtcl_la_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; test -n "$(hamlibtcl_ladir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hamlibtcl_ladir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(hamlibtcl_ladir)"; \
	}

uninstall-hamlibtcl_laLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; test -n "$(hamlibtcl_ladir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(hamlibtcl_ladir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(hamlibtcl_ladir)/$$f"; \
	done

clean-hamlibtcl_laLTLIBRARIES:
	-test -z "$(hamlibtcl_la_LTLIBRARIES)" || rm -f $(hamlibtcl_la_LTLIBRARIES)
	@list='$(hamlibtcl_la_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

Hamliblua.la: $(Hamliblua_la_OBJECTS) $(Hamliblua_la_DEPENDENCIES) $(EXTRA_Hamliblua_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(Hamliblua_la_LINK) $(am_Hamliblua_la_rpath) $(Hamliblua_la_OBJECTS) $(Hamliblua_la_LIBADD) $(LIBS)

_Hamlib.la: $(_Hamlib_la_OBJECTS) $(_Hamlib_la_DEPENDENCIES) $(EXTRA__Hamlib_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(_Hamlib_la_LINK) $(am__Hamlib_la_rpath) $(_Hamlib_la_OBJECTS) $(_Hamlib_la_LIBADD) $(LIBS)

hamlibtcl.la: $(hamlibtcl_la_OBJECTS) $(hamlibtcl_la_DEPENDENCIES) $(EXTRA_hamlibtcl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hamlibtcl_la_LINK) $(am_hamlibtcl_la_rpath) $(hamlibtcl_la_OBJECTS) $(hamlibtcl_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo # am--include-marker
include ./$(DEPDIR)/hamlibpy_wrap.Plo # am--include-marker
include ./$(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

Hamliblua_la-hamliblua_wrap.lo: hamliblua_wrap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Hamliblua_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT Hamliblua_la-hamliblua_wrap.lo -MD -MP -MF $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Tpo -c -o Hamliblua_la-hamliblua_wrap.lo `test -f 'hamliblua_wrap.c' || echo '$(srcdir)/'`hamliblua_wrap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Tpo $(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
#	$(AM_V_CC)source='hamliblua_wrap.c' object='Hamliblua_la-hamliblua_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(Hamliblua_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o Hamliblua_la-hamliblua_wrap.lo `test -f 'hamliblua_wrap.c' || echo '$(srcdir)/'`hamliblua_wrap.c

hamlibtcl_la-hamlibtcl_wrap.lo: hamlibtcl_wrap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hamlibtcl_la_CFLAGS) $(CFLAGS) -MT hamlibtcl_la-hamlibtcl_wrap.lo -MD -MP -MF $(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Tpo -c -o hamlibtcl_la-hamlibtcl_wrap.lo `test -f 'hamlibtcl_wrap.c' || echo '$(srcdir)/'`hamlibtcl_wrap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Tpo $(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Plo
#	$(AM_V_CC)source='hamlibtcl_wrap.c' object='hamlibtcl_la-hamlibtcl_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hamlibtcl_la_CFLAGS) $(CFLAGS) -c -o hamlibtcl_la-hamlibtcl_wrap.lo `test -f 'hamlibtcl_wrap.c' || echo '$(srcdir)/'`hamlibtcl_wrap.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_pyexecPYTHON: $(nodist_pyexec_PYTHON)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pyexec_PYTHON)'; dlist=; list2=; test -n "$(pyexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pyexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pyexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pyexecdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pyexecdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pyexecdir)" $$dlist; \
	else :; fi

uninstall-nodist_pyexecPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pyexec_PYTHON)'; test -n "$(pyexecdir)" || list=; \
	py_files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$py_files" || exit 0; \
	dir='$(DESTDIR)$(pyexecdir)'; \
	pyc_files=`echo "$$py_files" | sed 's|$$|c|'`; \
	pyo_files=`echo "$$py_files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$py_files" "$$pyc_files" "$$pyo_files"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	dir='$(DESTDIR)$(pyexecdir)/__pycache__'; \
	echo "$$py_files" | $(am__pep3147_tweak) | $(am__base_list) | \
	  while read files; do \
	    $(am__uninstall_files_from_dir) || st=$$?; \
	  done || exit $$?; \
	exit $$st
install-exampleDATA: $(example_DATA)
	@$(NORMAL_INSTALL)
	@list='$(example_DATA)'; test -n "$(exampledir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(exampledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(exampledir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(exampledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(exampledir)" || exit $$?; \
	done

uninstall-exampleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(example_DATA)'; test -n "$(exampledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(exampledir)'; $(am__uninstall_files_from_dir)
install-hamlibtcl_laDATA: $(hamlibtcl_la_DATA)
	@$(NORMAL_INSTALL)
	@list='$(hamlibtcl_la_DATA)'; test -n "$(hamlibtcl_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hamlibtcl_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hamlibtcl_ladir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hamlibtcl_ladir)" || exit $$?; \
	done

uninstall-hamlibtcl_laDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hamlibtcl_la_DATA)'; test -n "$(hamlibtcl_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hamlibtcl_ladir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) all-local
installdirs:
	for dir in "$(DESTDIR)$(Hamliblua_ladir)" "$(DESTDIR)$(_Hamlib_ladir)" "$(DESTDIR)$(hamlibtcl_ladir)" "$(DESTDIR)$(pyexecdir)" "$(DESTDIR)$(exampledir)" "$(DESTDIR)$(hamlibtcl_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-Hamliblua_laLTLIBRARIES clean-_Hamlib_laLTLIBRARIES \
	clean-generic clean-hamlibtcl_laLTLIBRARIES clean-libtool \
	clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibpy_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-Hamliblua_laLTLIBRARIES \
	install-_Hamlib_laLTLIBRARIES install-exampleDATA \
	install-hamlibtcl_laDATA install-hamlibtcl_laLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-exec-local install-nodist_pyexecPYTHON

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/Hamliblua_la-hamliblua_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibpy_wrap.Plo
	-rm -f ./$(DEPDIR)/hamlibtcl_la-hamlibtcl_wrap.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-Hamliblua_laLTLIBRARIES \
	uninstall-_Hamlib_laLTLIBRARIES uninstall-exampleDATA \
	uninstall-hamlibtcl_laDATA uninstall-hamlibtcl_laLTLIBRARIES \
	uninstall-local uninstall-nodist_pyexecPYTHON

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--depfiles check \
	check-am check-local clean clean-Hamliblua_laLTLIBRARIES \
	clean-_Hamlib_laLTLIBRARIES clean-generic \
	clean-hamlibtcl_laLTLIBRARIES clean-libtool clean-local \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-local \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-Hamliblua_laLTLIBRARIES \
	install-_Hamlib_laLTLIBRARIES install-am install-data \
	install-data-am install-dvi install-dvi-am install-exampleDATA \
	install-exec install-exec-am install-exec-local \
	install-hamlibtcl_laDATA install-hamlibtcl_laLTLIBRARIES \
	install-html install-html-am install-info install-info-am \
	install-man install-nodist_pyexecPYTHON install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-Hamliblua_laLTLIBRARIES \
	uninstall-_Hamlib_laLTLIBRARIES uninstall-am \
	uninstall-exampleDATA uninstall-hamlibtcl_laDATA \
	uninstall-hamlibtcl_laLTLIBRARIES uninstall-local \
	uninstall-nodist_pyexecPYTHON

.PRECIOUS: Makefile


#hamlibperl_wrap.c: hamlib.swg $(SWIGDEP)
#	$(AM_V_GEN)$(SWIG) -perl5 -shadow $(AM_CPPFLAGS) -I$(top_srcdir)/bindings \
#		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

#Hamlib-pl.mk: $(srcdir)/Makefile.PL
#	$(AM_V_at)test -f Makefile.PL || $(LN_S) $(srcdir)/Makefile.PL Makefile.PL
#	$(AM_V_at)perl $$(test -f Makefile.PL || echo '$(srcdir)/')Makefile.PL \
#			MAKEFILE="Hamlib-pl.mk" \
#			PREFIX="$(prefix)" \
#			INC="$(AM_CPPFLAGS)"  \
#			CC="$(CC)"  \
#			OBJECT="hamlibperl_wrap.o" \
#			VERSION="$(PACKAGE_VERSION)" \
#			LIBS="-L$(top_builddir)/src/.libs -lhamlib"
#	$(AM_V_at)sed -e 's/^LD_RUN_PATH.*/LD_RUN_PATH =/' Hamlib-pl.mk > Hamlib-pl-norpath.mk
#	$(AM_V_at)mv Hamlib-pl-norpath.mk Hamlib-pl.mk

#all-perl: Hamlib-pl.mk hamlibperl_wrap.c
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk all

#check-perl: all-perl
#	$(AM_V_at)LD_LIBRARY_PATH=$(top_builddir)/src/.libs perl $(top_srcdir)/bindings/perltest.pl

#clean-perl: Hamlib-pl.mk
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk clean

#distclean-perl: ## Hamlib-pl.mk

#distcheck-perl: Hamlib-pl.mk
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk distcheck

#install-perl: Hamlib-pl.mk
#	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -f Hamlib-pl.mk install_site

#uninstall-perl: ## Hamlib-pl.mk

#all-py: $(pyexec_ltlib)

#check-py: all-py
#	$(AM_V_at)PYTHONPATH=$(builddir):$(builddir)/.libs \
#		$(PYTHON) $(srcdir)/$(pytest) \
#		|| echo "Python test failed" 1>&2

#Hamlib.py: hamlibpy_wrap.c

#hamlibpy_wrap.c: hamlib.swg $(SWGDEP)
#	$(AM_V_GEN)$(SWIG) -python $(AM_CPPFLAGS) $(PYTHON_CPPFLAGS) -I$(top_srcdir)/bindings \
#		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

#install-py:
#clean-py:
#distclean-py:
#uninstall-py:

# Having the first occurrence of 'hamlib' capitalized seemed to cause confusion
# for the TCL interpreter loading the Hamlib module.
#pkgIndex.tcl: Makefile
#	$(AM_V_at)echo 'package ifneeded hamlib $(PKG_VER) [list load [file join $$dir $(DLL)] Hamlib]' > pkgIndex.tcl

#hamlibtcl_wrap.c: hamlib.swg $(SWGDEP)
#	$(AM_V_GEN)$(SWIG) -tcl -pkgversion $(PKG_VER) $(AM_CPPFLAGS) \
#		-I$(top_srcdir)/bindings \
#		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

#tcltest.tcl: tcltest.tcl.in Makefile
#	$(AM_V_GEN)$(do_subst) < $(srcdir)/tcltest.tcl.in > tcltest.tcl

#all-tcl: pkgIndex.tcl $(tcl_ltlib) tcltest.tcl

#check-tcl: all-tcl
#	$(AM_V_at)cp $(builddir)/pkgIndex.tcl $(builddir)/.libs
#	$(AM_V_at)TCLLIBPATH=$(builddir)/.libs tclsh $(builddir)/tcltest.tcl \
#		|| echo "Tcl test failed" 1>&2
#	$(AM_V_at)rm -f $(builddir)/.libs/pkgIndex.tcl

#install-tcl:
#clean-tcl:
#distclean-tcl: clean-tcl
#uninstall-tcl:

#all-lua: $(luaexec_ltlib)

#check-lua: all-lua
#	$(AM_V_at)LUA_CPATH="$(abs_builddir)/.libs/?.so" $(LUA) $(srcdir)/luatest.lua \
#		|| echo "Lua test failed" 1>&2

#Hamlib.lua: hamliblua_wrap.c

#hamliblua_wrap.c: hamlib.swg $(SWGDEP)
#	$(AM_V_GEN)$(SWIG) -lua $(AM_CPPFLAGS) -I$(top_srcdir)/bindings \
#		-o $@ $$(test -f hamlib.swg || echo '$(srcdir)/')hamlib.swg

#install-lua:
#clean-lua:
#distclean-lua:
#uninstall-lua:

# Lua

all-local: 

check-local: 
clean-local: 
distclean-local: 
distcheck-local: 
install-exec-local: 
uninstall-local: 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
